{
  "name": "Beatbeat",
  "tagline": "",
  "body": "# BeatBeat\r\n\r\n## Description\r\n\r\nThis project is about visualizing sound pulses on RGB LED Matrix. We use Google Speech API to convert\r\nspeech to text, use it as query parameter for SoundCloud Api, and finally playback the recommended song using Gstreamer player, and at the same time show visualization on RGB LED Matrix.\r\n\r\nUntil now, we have achieved first milestone of simulating the visualization using [Cava](http://karlstav.github.io/cava/) on raspberry pi's terminal.\r\nShowing actual output on RGB Led Matrix (32x32) is work in progress.\r\n\r\n#### Libraries and Hardware Used\r\n\r\n1. Raspberry Pi 2\r\n2. [Google Speech API](https://cloud.google.com/speech/) (Python library)\r\n3. Cava\r\n4. Gstreamer player\r\n5. [RGB LED Matrix (32x32)](https://www.adafruit.com/product/607)\r\n6. Bluemoon USB Mic\r\n7. Speakers\r\n\r\n## How to run this code\r\n\r\n### Setup\r\n\r\nBefore running these samples perform the steps:\r\n\r\n* Clone this repo\r\n    ```\r\n    git clone https://github.com/DjangoGirlsSeoul/BeatBeat.git\r\n    cd BeatBeat\r\n    ```\r\n\r\n* Create a [virtualenv][virtualenv]\r\n    ```\r\n    virtualenv env\r\n    source env/bin/activate\r\n    ```\r\n\r\n### Install the dependencies\r\n```bash\r\npip install -r requirements.txt\r\n```\r\n\r\n### Google Cloud Speech API\r\n\r\n### Prerequisites\r\n\r\n### Enable the Speech API\r\n\r\nIf you have not already done so,\r\n[enable the Google Cloud Speech API for your project](https://console.cloud.google.com/apis/api/speech.googleapis.com/overview).\r\nYou must be whitelisted to do this.\r\n\r\n\r\n### Set Up to Authenticate With Your Project's Credentials\r\n\r\nThe code uses a service account for OAuth2 authentication.\r\nSo next, set up to authenticate with the Speech API using your project's\r\nservice account credentials.\r\n\r\nVisit the [Cloud Console](https://console.cloud.google.com), and navigate to:\r\n`API Manager > Credentials > Create credentials >\r\nService account key > New service account`.\r\nCreate a new service account, and download the json credentials file.\r\n\r\nThen, set\r\nthe `GOOGLE_APPLICATION_CREDENTIALS` environment variable to point to your\r\ndownloaded service account credentials before running this example:\r\n\r\n    export GOOGLE_APPLICATION_CREDENTIALS=/path/to/your/credentials-key.json\r\n\r\nIf you do not do this, the REST api will return a 403. The streaming sample will\r\njust sort of hang silently.\r\n\r\nSee the\r\n[Cloud Platform Auth Guide](https://cloud.google.com/docs/authentication#developer_workflow)\r\nfor more information.\r\n\r\n### SoundCloud\r\nObtain API Key (client id) from here[https://developers.soundcloud.com/] and add to `speech_streaming.py`\r\n\r\n### Troubleshooting\r\n\r\n#### PortAudio on OS X\r\n\r\nIf you see the error\r\n\r\n    fatal error: 'portaudio.h' file not found\r\n\r\nTry adding the following to your ~/.pydistutils.cfg file,\r\nsubstituting in your appropriate brew Cellar directory:\r\n\r\n    include_dirs=/usr/local/Cellar/portaudio/19.20140130/include/\r\n    library_dirs=/usr/local/YourUsername/homebrew/Cellar/portaudio/19.20140130/lib/\r\n\r\n## Run the Code\r\n\r\n* To run the `speech_streaming.py` code:\r\n\r\n    ```sh\r\n    $ python speech_streaming.py\r\n    ```\r\n\r\n    You should see a response with the transcription result and Sound cloud track result.\r\n\r\n\r\n    The code will run in a continuous loop, printing the data and metadata\r\n    it receives from the Speech API, which includes alternative transcriptions. Say \"stop\" to exit the loop.\r\n\r\n    Note that the `speech_streaming.py` sample does not yet support python 3, as\r\n    the upstream `grpcio` library's support is [not yet\r\n    complete](https://github.com/grpc/grpc/issues/282).\r\n\r\n* To see the audio visualization simulation. `git clone` the [cava respository](https://github.com/karlstav/cava) and run it in a new terminal.\r\n\r\n\r\n### Deactivate virtualenv\r\n\r\n```\r\ndeactivate\r\n```\r\n\r\n### TO-DO\r\n\r\n* Instead of showing output throug Cava, our goal is to show sound visualization on [RGB LED Matrix](https://www.adafruit.com/product/607)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}